export default { "javaClass": "com.huawei.sdm.page.extend.mobile.container.MobilePage", "fullScreen": true, "includes": [{ "javaClass": "com.huawei.sdm.page.extend.mobile.include.MJavaScript", "code": "self.updateCache = function (orderid) {\n    Spl.MessageProcessor.submitData({\n        serviceId: 'pendinglistBymeProcessType_WFM_update',\n        data: Nf.ValueParser().getParameters({\n            orderid: orderid\n        }),\n        actionType: \"Delete\",\n        cacheKey: \"pendinglistBymeProcessType_WFM:\" + JSON.stringify({\n            \"orderid\": orderid\n        })\n    });\n    Spl.MessageProcessor.submitData({\n        serviceId: 'mtask_work_update',\n        data: Nf.ValueParser().getParameters({\n            task_id: orderid\n        }),\n        actionType: \"Delete\",\n        cacheKey: \"mtask_work:\" + JSON.stringify({\n            \"task_id\": orderid\n        })\n    });\n    Spl.MessageProcessor.submitData({\n        serviceId: 'getServiceCommonScript_WFM',\n        data: Nf.ValueParser().getParameters({\n            orderid: orderid\n        }),\n        actionType: \"Delete\"\n    });\n    Spl.MessageProcessor.submitData({\n        serviceId: 'mobileGetProcessPageScript_WFM_update',\n        data: Nf.ValueParser().getParameters({\n            orderid: orderid\n        }),\n        actionType: \"Delete\",\n        cacheKey: \"mobileGetProcessPageScript_WFM:\" + JSON.stringify({\n            \"orderid\": orderid\n        })\n    });\n    Spl.MessageProcessor.loadData({\n        serviceId: 'todoCountByType_get_WFM',\n        data: Nf.ValueParser().getParameters({\n            \"name\": \"Preventive_Maintenance\",\n        }),\n        success: function (data) {\n            if (data && data.result && data.result.count) {\n                var count = data.result.count;\n                count = parseInt(count) - 1;\n                Spl.MessageProcessor.submitData({\n                    serviceId: 'todoCountByType_WFM_update',\n                    data: Nf.ValueParser().getParameters({\n                        \"name\": \"Preventive_Maintenance\",\n                        \"count\": \"\" + count\n                    }),\n                    actionType: \"Update\"\n                });\n            }\n        }\n    });\n}\nself.goList = function (orderid) {\n    updateCache(orderid);\n    Nf.promptError({\n        title: \"Info\",\n        message: \"Task is not exist.Please go back to list and refresh.\",\n        okText: Nf.res('btn.label.ok'),\n        yes: function () {\n            Nf.PageManager.open(\"process_task/mobile_tasks_todolistForWFMTask.mspl\");\n        }\n    });\n}" }, { "javaClass": "com.huawei.sdm.page.extend.mobile.include.MJavaScript", "code": "Nf.PageReady(function () {\n\n    var processdefkey = CurrentPage().parameters[\"processdefkey\"]; //Process marking\n    var task_type = CurrentPage().parameters[\"task_type\"];\n    var operation = CurrentPage().parameters[\"operation\"]; //Operation type , create and to the first page, or to process the list\n    var taskid = CurrentPage().parameters[\"taskid\"];\n    var ticketid = CurrentPage().parameters[\"ticketid\"];\n    var orderid = CurrentPage().parameters[\"orderid\"];\n    var userid = CurrentPage().parameters[\"userid\"];\n    var processstatus = CurrentPage().parameters[\"processstatus\"];\n    var timestamp = CurrentPage().parameters[\"timestamp\"];\n    var businessType = CurrentPage().parameters[\"businessType\"];\n    var isHomeFlag = CurrentPage().parameters[\"isHomeFlag\"];\n    var start_end_time = CurrentPage().parameters[\"start_end_time\"];\n    var filter_task_type = CurrentPage().parameters[\"filter_task_type\"];\n    var username = U.readLocalData(\"username\");\n    var workflowtype;\n\n    if (!businessType) {\n        businessType = CurrentPage().parameters[\"businesstype\"];\n    }\n\n    if (!isNotNull(isHomeFlag)) {\n        isHomeFlag = \"\";\n    }\n    if (!isNotNull(filter_task_type)) {\n        filter_task_type = \"\";\n    }\n    if (task_type == \"PM\") {\n        workflowtype = \"Preventive_Maintenance\";\n    } else if (task_type == \"CM\") {\n        workflowtype = \"Corrective_Maintenance\";\n    } else if (task_type == \"PLM\") {\n        workflowtype = \"Planned_Maintenance\";\n    } else if (task_type == \"CSF\") {\n        workflowtype = \"Service_Fulfillment\";\n    } else if (task_type == \"ESF\") {\n        workflowtype = \"Service_Fulfillment_Enterprise\";\n    } else if (task_type == \"CSA\") {\n        workflowtype = \"Service_Assurance_Customer\";\n    } else if (task_type == \"ESA\") {\n        workflowtype = \"Service_Assurance_Enterprise\";\n    } else {\n        Spl.MessageProcessor.loadData({\n            serviceId: \"pd_process_definition_getList\",\n            data: {\n                \"start\": 0,\n                \"limit\": 100,\n                \"businesstype\": \"WFM\",\n                \"isactive\": 1\n            },\n            success: function (data) {\n                if(data && data.results){\n                    for (var i = 0; i < data.results.length; i++) {\n                        var abbreviation = data.results[i].abbreviation;\n                        var process_name = data.results[i].process_name;\n                        if(task_type == abbreviation) {\n                            workflowtype = process_name;\n                            break;\n                        }\n                    }\n                }\n            }\n        });\n    }\n\n    var mobilepagename;\n    var mobileurl;\n    var pmb = Nf.PageManager;\n\n    function doRedirect() {\n        if (!processstatus || processstatus == \"\" || processstatus == \"Running\") {\n            if (operation == \"create\") {\n                Spl.MessageProcessor.loadData({\n                    serviceId: \"mobileGetProcessPageScript\",\n                    data: {\n                        'processdefkey': processdefkey\n                    },\n                    silent: true,\n                    success: function (ev) {\n\n                        var page = ev.result.createFormUrl;\n                        mobilepagename = \"mobile-\" + page.split(\"/\")[1];\n                        mobileurl = page.split(\"/\")[0] + \"/\" + mobilepagename + \".mspl\";\n\n                        pmb.open(mobileurl, {\n                            'start_end_time': start_end_time,\n                            'isHomeFlag': isHomeFlag,\n                            \"filter_task_type\": filter_task_type,\n                            'mobilepagename': mobilepagename,\n                            'processdefkey': processdefkey,\n                            \"timestamp\": timestamp\n                        });\n                    }\n                });\n            } else {\n                if (null != businessType && undefined != businessType && \"WFM\" == businessType) {\n                    Spl.MessageProcessor.loadData({\n                        serviceId: \"mobileGetProcessPageScript_WFM\",\n                        data: {\n                            'processdefkey': processdefkey,\n                            'orderid': orderid,\n                            'userid': userid\n                        },\n                        silent: true,\n                        canUseWhenOffline: true,\n                        success: function (ev) {\n                            var obj = {\n                                canUseWhenOffline: true\n                            }\n                            if (U.isOnline()) {\n                                obj.canUseWhenOffline = false\n                            }\n                            if (!ev || ev.hasOwnProperty(\"errorinfo\")) {\n                                toRecordPage();\n                            } else {\n                                var page = ev.result.editFormUrl;\n                                var pageArr = page.split(\"-\");\n                                //if aceept page is abnormal\n                                if (pageArr[2] == \"CM6\" || pageArr[2] == \"PM12\" || pageArr[2] == \"PLM10\") {\n                                    pageArr[2] = \"common\";\n                                    page = pageArr.join(\"-\");\n                                }\n                                mobilepagename = \"mobile-\" + page.split(\"/\")[1];\n                                mobileurl = page.split(\"/\")[0] + \"/\" + mobilepagename + \".mspl\";\n                                var basicinfo = page.split(\"/\")[0] + \"/mobile-\" + processdefkey + \"_basicinfoForm.mspl\";\n\n                                // if task phrase close ,not handle it                                 \n                                Spl.MessageProcessor.loadData({\n                                    serviceId: \"mtask_work_get\",\n                                    data: {\n                                        \"task_id\": orderid\n                                    },\n                                    canUseWhenOffline: obj.canUseWhenOffline,\n                                    success: function (data) {\n                                        if (data && data.result && data.result.current_phase == \"close\") {\n                                            if (data.result.operate_type == \"leave\" || data.result.out_in != \"entry\") {\n                                                var opt = {\n                                                    title: \"Info\",\n                                                    message: \"this ticket is phase close,can not handle it\",\n                                                    okText: Nf.res('btn.label.ok'),\n                                                    yes: function () {\n                                                        backto_page();\n                                                    }\n                                                };\n                                                updateCache(orderid);\n                                                Nf.promptError(opt);\n                                            } else {\n                                                var cpage = page.split(\"/\")[1];\n                                                cpage = \"mobile-\" + cpage.split(\"-\")[0] + \"-\" + cpage.split(\"-\")[1] + \"-common.mspl\";\n                                                mobileurl = page.split(\"/\")[0] + \"/\" + cpage;\n                                                pmb.open(mobileurl, {\n                                                    'start_end_time': start_end_time,\n                                                    'isHomeFlag': isHomeFlag,\n                                                    'filter_task_type': filter_task_type,\n                                                    'basicinfourl': basicinfo,\n                                                    'mobileurl': mobileurl,\n                                                    'workflowtype': workflowtype,\n                                                    'workflowtypelist': workflowtype,\n                                                    'mobilepagename': mobilepagename,\n                                                    'processdefkey': processdefkey,\n                                                    'taskid': ev.result.taskId,\n                                                    'orderid': orderid,\n                                                    'userid': userid,\n                                                    \"ticketid\": ticketid,\n                                                    \"timestamp\": timestamp,\n                                                    \"isWFM\": \"yes\"\n                                                });\n                                            }\n                                        } else if (data.result.assign_to_fme != username || data.result.task_status == \"rejected\" || data.result.task_status == \"unscheduled\" || data.result.task_status == \"canceled\" || data.result.task_status == \"closed\") {\n                                            goList(orderid);\n                                        } else {\n                                            pmb.open(mobileurl, {\n                                                'start_end_time': start_end_time,\n                                                'isHomeFlag': isHomeFlag,\n                                                'filter_task_type': filter_task_type,\n                                                'basicinfourl': basicinfo,\n                                                'mobileurl': mobileurl,\n                                                'workflowtype': workflowtype,\n                                                'workflowtypelist': workflowtype,\n                                                'mobilepagename': mobilepagename,\n                                                'processdefkey': processdefkey,\n                                                'taskid': ev.result.taskId,\n                                                'orderid': orderid,\n                                                'userid': userid,\n                                                \"ticketid\": ticketid,\n                                                \"timestamp\": timestamp,\n                                                \"isWFM\": \"yes\"\n                                            });\n                                        }\n                                    }\n                                });\n\n                            }\n                        }\n                    });\n                } else {\n                    Spl.MessageProcessor.loadData({\n                        serviceId: \"mobileGetProcessPageScript\",\n                        data: {\n                            'processdefkey': processdefkey,\n                            'taskid': taskid,\n                            'orderid': orderid,\n                            'userid': userid\n                        },\n                        silent: true,\n                        success: function (ev) {\n\n                            if (ev.hasOwnProperty(\"errorinfo\")) {\n                                toRecordPage();\n                            } else {\n                                var page = ev.result.editFormUrl;\n                                mobilepagename = \"mobile-\" + page.split(\"/\")[1];\n                                mobileurl = page.split(\"/\")[0] + \"/\" + mobilepagename + \".mspl\";\n\n                                pmb.open(mobileurl, {\n                                    'start_end_time': start_end_time,\n                                    'isHomeFlag': isHomeFlag,\n                                    'filter_task_type': filter_task_type,\n                                    'workflowtype': workflowtype,\n                                    'mobilepagename': mobilepagename,\n                                    'processdefkey': processdefkey,\n                                    'taskid': ev.result.taskId,\n                                    'orderid': orderid,\n                                    'userid': userid,\n                                    \"ticketid\": ticketid,\n                                    \"timestamp\": timestamp\n                                });\n                            }\n                        }\n                    });\n                }\n\n            }\n        } else {\n            toRecordPage();\n        }\n        \n    }\n\n    function isNotNull(value) {\n        if (value == null || value == undefined) {\n            return false;\n        }\n\n        var valstr = value.toString();\n        if (valstr == 'null' || valstr == 'undefined' || valstr == '') {\n            return false;\n        }\n\n        return true;\n    }\n\n    function toRecordPage() {\n        Spl.MessageProcessor.loadData({\n            serviceId: \"pd_process_definition_get\",\n            data: {\n                'process_key': processdefkey\n            },\n            silent: true,\n            //canUseWhenOffline: getOnLineStatus(),\n            success: function (ev) {\n                if (ev && ev.result && ev.result.businesstype && ev.result.businesstype == 'WFM') {\n                    updateCache(orderid);\n                    Nf.prompt({\n                        title: 'Info',\n                        message: \"Task not exist.\",\n                        yes: function () {\n                            backto_page();\n                        },\n                        no: function () {\n                            backto_page();\n                        },\n                        okText: Nf.res('btn.label.ok'),\n                        cancelText: Nf.res('btn.label.cancel')\n                    });\n                } else {\n                    pmb.open(\"process_mobile/mobile_recordlist.mspl\", {\n                        'orderid': orderid,\n                        'process_key': processdefkey,\n                        \"timestamp\": timestamp\n                    });\n                }\n            },\n            error: function (ev) {\n                pmb.open(\"process_mobile/mobile_recordlist.mspl\", {\n                    'orderid': orderid,\n                    'process_key': processdefkey,\n                    \"timestamp\": timestamp\n                });\n\n            }\n        });\n    }\n\n    CurrentPage().on(\"show\", function () {\n        doRedirect();\n    });\n\n    doRedirect();\n});" }, { "javaClass": "com.huawei.sdm.page.extend.mobile.include.MI18n", "bundle": "wfm_i18n_lang" }], "body": [] }